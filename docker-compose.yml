services:
  db:
    image: postgres:16-alpine
    container_name: vacation_db
    environment:
      POSTGRES_DB: ${DB_DATABASE:-vacation}
      POSTGRES_USER: ${DB_USERNAME:-vacation}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [backend]

  php:
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: vacation_php
    environment:
      APP_ENV: ${APP_ENV:-local}
      DB_DSN: pgsql:host=db;port=5432;dbname=${DB_DATABASE:-vacation}
      DB_USERNAME: ${DB_USERNAME:-vacation}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      JWT_SECRET: ${JWT_SECRET:-change-me}
      TERM: xterm-256color
      API_BASE_URL: http://nginx/api/v1
      JWT_PRIVATE_KEY_PATH: /var/www/html/keys/jwt-private.pem
      JWT_PUBLIC_KEY_PATH:  /var/www/html/keys/jwt-public.pem
      JWT_KID: cli
      JWT_ISS: vacation-api
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./:/var/www/html
      - ./keys:/var/www/html/keys:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks: [backend]

  nginx:
    image: nginx:alpine
    container_name: vacation_nginx
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - php
    networks: [backend]

  redis:
    image: redis:7-alpine
    container_name: vacation_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks: [backend]

volumes:
  db_data:
  redis_data:

networks:
  backend:
    driver: bridge
